!function(){"use strict";function e(d,g,u,y){return{restrict:"A",require:"ngModel",scope:{config:"=datepickerConfig",selectedDate:"=selectedDate"},link:function(m,t,e,a){var n=angular.element(d.get("datepicker.html")),f="",h=moment.utc(),r={gregorian:"ميلادي",hijri:"هجري"},i={gregorian:"Gregorian",hijri:"Hijri"};function s(e){n===e.target||n[0].contains(e.target)||e.target===t[0]||(u.off("click",s),m.$apply(function(){m.calendarCursor=f||h,m.pickerDisplayed=m.showMonthsList=m.showYearsList=!1}))}function o(e){var t,a=[],n=(e=moment.utc(e),null);"gregorian"===m.config.defaultDisplay?(t=moment(e).date(1),n=moment(e).date(e.daysInMonth())):(t=moment(e).iDate(1),n=moment(e).iDate(p(""+e.endOf("iMonth").format("iDD"))));var r=moment(t),i=moment(n);r=0===t.weekday()?r:r.weekday(0),i=6===n.weekday()?i:i.weekday(6);for(var s=[],o=moment(r);o.isBefore(moment(i).add(1,"days"));o.add(1,"days")){var c=!m.config.minDate||o.isAfter(m.config.minDate,"day"),l=!m.config.maxDate||o.isBefore(m.config.maxDate,"day"),d=o.isAfter(h),g=m.config.allowFuture||!d,u={date:moment(o).toDate(),isToday:o.isSame(h,"day"),isInMonth:o.isSame(t,"month"),isInHijriMonth:o.iMonth()===t.iMonth(),isSelected:o.isSame(f,"day"),dayInHijri:p(""+o.format("iDD")),day:p(""+o.format("DD")),isSelectable:c&&l&&g};s.push(u),6!==o.weekday()&&o!==i||(a.push(s),s=[])}return a}function p(e){return Number(e.replace(/[٠١٢٣٤٥٦٧٨٩]/g,function(e){return e.charCodeAt(0)-1632}).replace(/[۰۱۲۳۴۵۶۷۸۹]/g,function(e){return e.charCodeAt(0)-1776}))}function c(e){return e.replace(/[٠١٢٣٤٥٦٧٨٩]/g,function(e){return e.charCodeAt(0)-1632}).replace(/[۰۱۲۳۴۵۶۷۸۹]/g,function(e){return e.charCodeAt(0)-1776})}function l(){"gregorian"===m.config.defaultDisplay&&moment.locale().startsWith("ar")?m.switchButtonLabel=r.hijri:"gregorian"===m.config.defaultDisplay&&moment.locale().startsWith("en")?m.switchButtonLabel=i.hijri:"hijri"===m.config.defaultDisplay&&moment.locale().startsWith("ar")?m.switchButtonLabel=r.gregorian:"hijri"===m.config.defaultDisplay&&moment.locale().startsWith("en")&&(m.switchButtonLabel=i.gregorian)}m.config=angular.extend({allowFuture:!0,dateFormat:"DD/MM/YYYY",gregorianDateFormat:"DD/MM/YYYY",hijriDateFormat:"iDD/iMM/iYYYY",minDate:null,maxDate:null,defaultDisplay:"gregorian",locale:null},m.config),angular.isDefined(m.config.locale)&&moment.locale(m.config.locale),angular.isDefined(m.config.minDate)&&moment.utc(m.config.minDate).subtract(1,"day"),angular.isDefined(m.config.maxDate)&&moment.utc(m.config.maxDate).add(1,"day"),m.config.isRTL="ar"===moment.locale()||"ar-sa"===moment.locale(),l(),m.calendarCursor=h,m.currentWeeks=[],m.daysNameList=y.getDaysNames(),m.monthsList=moment.months(),m.monthsInHijriList=moment.localeData()._iMonths,m.yearsList=y.getYearsList(),m.yearsInHijriList=y.getYearsInHijriList(),m.pickerDisplayed=!1,m.$watch(function(){return a.$modelValue},function(e){e&&(f=m.calendarCursor=moment.utc(e,m.config.dateFormat))}),m.$watch("calendarCursor",function(e){m.currentWeeks=o(e)}),t.bind("click",function(e){m.$apply(function(){m.pickerDisplayed=!0,u.on("click",s)})}),t.wrap('<div class="ng-hg-datepicker-wrapper"></div>'),g(n)(m),t.after(n),angular.isDefined(a.$modelValue)&&moment.isDate(a.$modelValue)&&(m.calendarCursor=a.$modelValue),m.prevMonth=function(){"gregorian"===m.config.defaultDisplay?m.calendarCursor=moment(m.calendarCursor).subtract(1,"months"):m.calendarCursor=moment(m.calendarCursor).subtract(1,"iMonth")},m.nextMonth=function(){"gregorian"===m.config.defaultDisplay?m.calendarCursor=moment(m.calendarCursor).add(1,"months"):m.calendarCursor=moment(m.calendarCursor).add(1,"iMonth")},m.selectMonth=function(e){m.showMonthsList=!1,"gregorian"===m.config.defaultDisplay?m.calendarCursor=moment(m.calendarCursor).month(e):m.calendarCursor=moment(m.calendarCursor).iMonth(e)},m.selectYear=function(e){m.showYearsList=!1,"gregorian"===m.config.defaultDisplay?m.calendarCursor=moment(m.calendarCursor).year(e):m.calendarCursor=moment(m.calendarCursor).iYear(e)},m.selectDay=function(e){(e.isSelectable&&!e.isFuture||m.config.allowFuture&&e.isFuture)&&(m.currentWeeks.forEach(function(e,a){e.forEach(function(e,t){m.currentWeeks[a][t].isSelected=!1})}),e.isSelected=!0,a.$setViewValue(c(moment.utc(e.date).format(m.config.dateFormat))),m.selectedDate={hijri:c(moment.utc(e.date).format(m.config.hijriDateFormat)),gregorian:c(moment.utc(e.date).format(m.config.gregorianDateFormat))},a.$render(),m.pickerDisplayed=!1)},m.switchDate=function(){"gregorian"===m.config.defaultDisplay?m.config.defaultDisplay="hijri":m.config.defaultDisplay="gregorian",l(),m.currentWeeks=o(m.calendarCursor),m.showMonthsList=m.showYearsList=!1}}}}e.$inject=["$templateCache","$compile","$document","datesCalculator"],angular.module("ngHijriGregorianDatepicker",[]).directive("ngHijriGregorianDatepicker",e)}(),function(){"use strict";angular.module("ngHijriGregorianDatepicker").factory("datesCalculator",function(){return{getYearsList:function(){for(var e=[],t=1991;t<=moment().year();t++)e.push(t);return e},getYearsInHijriList:function(){for(var e=[],t=1411;t<=moment().iYear();t++)e.push(t);return e},getDaysNames:function(){for(var e=[],t=0;t<7;t++)e.push(moment().weekday(t).format("ddd"));return e}}})}(),angular.module("ngHijriGregorianDatepicker").run(["$templateCache",function(e){e.put("datepicker.html",'\r\n<div class="ng-hg-datepicker" ng-show="pickerDisplayed">\r\n    <div class="ng-hg-datepicker-table-header-bckgrnd"></div>\r\n    <table ng-class="{rtl: config.isRTL }">\r\n        <caption>\r\n            <div class="ng-hg-datepicker-header-wrapper">\r\n\t\t\t\t<span class="ng-hg-datepicker-arrow ng-hg-datepicker-arrow-left" ng-click="prevMonth()">\r\n\t\t\t\t\t<svg version="1.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="50" y="50" viewBox="0 0 100 100" xml:space="preserve">\r\n\t\t\t\t\t\t<polygon points="64.8,36.2 35.2,6.5 22.3,19.4 51.9,49.1 22.3,78.8 35.2,91.7 77.7,49.1" />\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t</span>\r\n                <div class="ng-hg-datepicker-header-year">\r\n                    <div class="ng-hg-datepicker-custom-select-box" outside-click="showMonthsList = false">\r\n                        <span class="ng-hg-datepicker-custom-select-title ng-hg-datepicker-month-name" ng-click="showMonthsList = !showMonthsList; showYearsList = false" ng-class="{selected: showMonthsList }">{{  config.defaultDisplay == \'hijri\' ? calendarCursor.format(\'iMMMM\') :  calendarCursor.format(\'MMMM\') }}</span>\r\n                        <div class="ng-hg-datepicker-custom-select" ng-show="showMonthsList">                            <span ng-if="config.defaultDisplay == \'gregorian\'" ng-repeat="monthName in monthsList" ng-click="selectMonth(monthName); showMonthsList = false">{{ monthName }}</span><span ng-if="config.defaultDisplay == \'hijri\'" ng-repeat="monthName in monthsInHijriList" ng-click="selectMonth(monthName); showMonthsList = false">{{ monthName }}</span>                        </div>\r\n                    </div>\r\n                    <div class="ng-hg-datepicker-custom-select-box" outside-click="showYearsList = false">\r\n                        <span class="ng-hg-datepicker-custom-select-title" ng-click="showYearsList = !showYearsList; showMonthsList = false" ng-class="{selected: showYearsList }">{{ config.defaultDisplay == \'hijri\' ? calendarCursor.format(\'iYYYY\') : calendarCursor.format(\'YYYY\') }}</span>\r\n                        <div class="ng-hg-datepicker-custom-select" ng-show="showYearsList">                            <span ng-if="config.defaultDisplay == \'gregorian\'" ng-repeat="yearNumber in yearsList" ng-click="selectYear(yearNumber)">{{ yearNumber }}</span> <span ng-if="config.defaultDisplay == \'hijri\'" ng-repeat="yearNumber in yearsInHijriList" ng-click="selectYear(yearNumber)">{{ yearNumber }}</span>                        </div>\r\n                    </div>\r\n                </div>\r\n                <span class="ng-hg-datepicker-arrow ng-hg-datepicker-arrow-right" ng-click="nextMonth()">\r\n\t\t\t\t\t<svg version="1.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="50" y="50" viewBox="0 0 100 100" xml:space="preserve">\r\n\t\t\t\t\t\t<polygon points="64.8,36.2 35.2,6.5 22.3,19.4 51.9,49.1 22.3,78.8 35.2,91.7 77.7,49.1" />\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t</span>\r\n            </div>\r\n        </caption>\r\n        <tbody>\r\n        <tr class="days-head">\r\n            <td class="day-head" ng-repeat="dayName in daysNameList">{{ dayName }}</td>\r\n        </tr>\r\n        <tr class="days" ng-repeat="week in currentWeeks">\r\n            <td ng-repeat="day in week" ng-click="selectDay(day)" ng-class="[\'day-item\', { \'isToday\': day.isToday, \'isInMonth\': ( day.isInHijriMonth && config.defaultDisplay == \'hijri\') || ( day.isInMonth && config.defaultDisplay == \'gregorian\'), \'isDisabled\': !day.isSelectable, \'isSelected\': day.isSelected }]"><span ng-if="config.defaultDisplay == \'gregorian\'">{{ day.day }}</span><span ng-if="config.defaultDisplay == \'hijri\'">{{ day.dayInHijri }}</span></td>\r\n        </tr>\r\n        </tbody>\r\n    </table>\r\n    <button class="switchBtn" ng-click="switchDate()">{{switchButtonLabel}}</button>\r\n</div>\r\n')}]);